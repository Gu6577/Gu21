import processing.pdf.*;
void setup() {
  String filename = this.getClass().getName();
  beginRecord(PDF, filename+".pdf");
  size(1000, 1000);

  background(255);
  stroke(0);
  noFill();
  render();
  endRecord();
}




//自定义render函数
void render() {
  VisLine[] lines =new VisLine[80];

  for (int i=0; i<lines.length; i++) {
    float x=map(i, -1, lines.length, 0, width);//设置等间隔x坐标
    Point p1=new Point(x, random(height));
    Point p2=new Point(x, random(height));
    lines[i]=new VisLine(p1, p2);  //创建
    float alpha=map(lines[i].length(), 0, height, 0, 100);
    lines[i].setColor(color(0,alpha));
  }

  for (int time=0; time<150; time++) {
    for (VisLine line : lines) {
      
      
      line.p1.rotate(line.p2, 0.01);
      //第一个端点以第二端点旋转
      line.display();
    }
  }
}

class Line {
  Point p1, p2;


  Line(Point p1, Point p2) {
    this.p1=p1;
    this.p2=p2;
  }

  float length() {  //返回线段长度
    return p1.distance(p2);
  }
}

class Point {
  float x, y;

  Point(float x, float y) {
    this.x=x;
    this.y=y;
  }
  Point() {
    x=0;
    y=0;
  }
  Point copy() {
    return new Point(x, y);
  }



  void rotate(Point p,float q){
    float dx=x-p.x;
    float dy=y-p.y;
    x=p.x+cos(q)*dx-sin(q)*dy;
    y=p.y+sin(q)*dx+cos(q)*dy;
  }
  
  

  //距离公式
  float distance(Point p) {
    float dx=x-p.x;
    float dy =y-p.y;
    return sqrt(dx*dx+dy*dy);
  }
}

class VisLine extends Line {
  float w;
  color c;

  VisLine(Point p1, Point p2, float w, color c) {
    super(p1, p2);
    this.w=w;
    this.c=c;
  }

  VisLine(Point p1, Point p2) {  //初始化宽度和颜色
    super(p1, p2);
    this.w=1;
    this.c=color(0);
  }

  void setWeight(float w) {  //设置宽度
    this.w=w;
  }

  void setColor(color c) {  //设置颜色
    this.c=c;
  }
  void display() {
    stroke(c);
    strokeWeight(w);
    line(p1.x, p1.y, p2.x, p2.y);
  }
}
